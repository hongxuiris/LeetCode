
# 1051. Height Checker

# Students are asked to stand in non-decreasing order of heights for an annual photo.
# Return the minimum number of students that must move in order for all students to be standing in non-decreasing order 
# of height.
# Notice that when a group of students is selected they can reorder in any possible way between themselves and the non 
# selected students remain on their seats.


# solution 1
class Solution:
    def heightChecker(self, heights: List[int]) -> int:
        d = collections.defaultdict(int)
        for height in heights:
            d[height] += 1
        res, height = 0, 1
        for i in range(len(heights)):
            while d[height] == 0:
                height += 1
            if height != heights[i]:
                res += 1
            d[height] -= 1
        return res




# solution 2, use a list to record height
class Solution:
    def heightChecker(self, heights: List[int]) -> int:
        d = [0]*101
        for height in heights:
            d[height] += 1
        res, height = 0, 1
        for i in range(len(heights)):
            while d[height] == 0:
                height += 1
            if height != heights[i]:
                res += 1
            d[height] -= 1
        return res

            


# Hong's answer
class Solution:
    def heightChecker(self, heights: List[int]) -> int:
        if not heights: return 0
        d = collections.defaultdict(int)
        for height in heights:
            d[height] += 1
            
        count, height = 0, 1
        
        while height <= 100:
            if len(heights) == 0: return count
            if d[height] == 0:
                height += 1
                continue
            if height != heights[0]:
                count += 1
            heights = heights[1:]
            d[height] -= 1
            
