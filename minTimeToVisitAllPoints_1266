# 1266. Minimum Time Visiting All Points
# On a plane there are n points with integer coordinates points[i] = [xi, yi]. Your task is to find the minimum time in 
# seconds to visit all points.

# You can move according to the next rules:
# In one second always you can either move vertically, horizontally by one unit or diagonally (it means to move one unit 
# vertically and one unit horizontally in one second).
# You have to visit the points in the same order as they appear in the array.

# points.length == n
# 1 <= n <= 100
# points[i].length == 2
# -1000 <= points[i][0], points[i][1] <= 1000


# solution
class Solution:
    def minTimeToVisitAllPoints(self, points: List[List[int]]) -> int:
        n = len(points)
        res = 0
        for i in range(n - 1):
            x1, y1 = points[i]
            x2, y2 = points[i+1]
            dx = abs(x1 - x2)
            dy = abs(y1 - y2)
            res += max(dx, dy)
        return res



# Hong's answer
class Solution:
    def minTimeToVisitAllPoints(self, points: List[List[int]]) -> int:
        n = len(points)
        res = 0
        for i in range(1, n):
            step = max(abs(points[i][0]-points[i-1][0]), abs(points[i][1]-points[i-1][1]))
            res += step
        return res
        
