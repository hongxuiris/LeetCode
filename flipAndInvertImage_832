# 832. Flipping an Image

# Given a binary matrix A, we want to flip the image horizontally, then invert it, and return the resulting image.

# To flip an image horizontally means that each row of the image is reversed.  For example, flipping [1, 1, 0] horizontally results in [0, 1, 1].

# To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0. For example, inverting [0, 1, 1] results in [1, 0, 0].

# time O(mn)
# space(1)


class Solution:
    def flipAndInvertImage(self, A: List[List[int]]) -> List[List[int]]:
        m, n = len(A), len(A[0])
        for i in range(m):
            j, k = 0, n-1
            while j <= k:
                A[i][j], A[i][k] = A[i][k] ^ 1, A[i][j] ^ 1
                j += 1
                k -= 1
        return A


               
class Solution:
    def flipAndInvertImage(self, A: List[List[int]]) -> List[List[int]]:
        out = [[1 ^ elm for elm in lst[::-1]] for lst in A]
        return out
        
        
Hong's answer
class Solution:
    def flipAndInvertImage(self, A: List[List[int]]) -> List[List[int]]:
        resA = [lst[::-1] for lst in A]
        # comp = [[1]*len(a) for a in A]
        out = [[1 ^ elm for elm in lst] for lst in resA]
        return out
               
