# 1304. Find N Unique Integers Sum up to Zero
# Given an integer n, return any array containing n unique integers such that they add up to 0.

# bitwise operation
# 5: 101
# 3:  11

# &  0  1
# 0  0  0
# 1  0  1

# 5 & 3: 001 -> 1

# ^  0  1
# 0  0  1
# 1  1  0

# 5 ^ 3: 110 -> 6

# |  0  1
# 0  0  1
# 1  1  1

# 5 | 3: 111 -> 7

# n >> i
# 5 >> 2 : 1(01) -> 1
# n << i: n * 2^i
# 5 <<2 : 10100: 5 * 2^2

# determine if a number is even: n % 2 == 0
# another way:n & 1, 0 even, 1 odd, this is more efficient



class Solution:
    def sumZero(self, n: int) -> List[int]:
        res = []
        n_max = n//2
        for idx in range(1, n_max+1):
            res.extend([-1*idx, idx])
        # if n % 2 == 1:
        if n & 1 == 1
            res.append(0)
        
        return res

